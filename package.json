{
  "private": true,
  "version": "0.0.8",
  "publisher": "maxchang",
  "name": "vscode-markmap-universe",
  "displayName": "Markmap Universe",
  "description": "Use mindmaps in Markdown previews with support for hexo-markmap and code blocks.",
  "type": "module",
  "repository": {
    "url": "https://github.com/markmap-universe/vscode-markmap-universe"
  },
  "main": "./dist/extension.cjs",
  "icon": "res/icon.png",
  "engines": {
    "vscode": "^1.89.0"
  },
  "categories": [
    "Visualization"
  ],
  "keywords": [
    "markmap",
    "mindmap",
    "markdown",
    "hexo"
  ],
  "activationEvents": [
    "onLanguage:markdown",
    "workspaceContains:README.md"
  ],
  "contributes": {
    "configuration": {
      "title": "Markmap Universe",
      "properties": {
        "markmap-universe.toolbar": {
          "type": "boolean",
          "title": "Show Toolbar",
          "default": true,
          "description": "Whether to show the toolbar in the preview."
        },
        "markmap-universe.globalOptions": {
          "type": "object",
          "title": "Global Options",
          "additionalProperties": false,
          "properties": {
            "color": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of colors to use as the branch and circle colors for each node."
            },
            "colorFreezeLevel": {
              "type": "number",
              "description": "Freeze color at the specified level of branches, i.e. all child branches will use the color of their ancestor node at the freeze level. `0` for no freezing at all."
            },
            "duration": {
              "type": "number",
              "description": "The animation duration when folding/unfolding a node."
            },
            "initialExpandLevel": {
              "type": "number",
              "description": "The maximum level of nodes to expand on initial render. `-1` for expanding all levels."
            },
            "lineWidth": {
              "type": "number",
              "description": "The stroke width of lines between nodes."
            },
            "maxWidth": {
              "type": "number",
              "description": "The max width of each node content. 0 for no limit."
            },
            "pan": {
              "type": "boolean",
              "description": "Whether to allow panning the markmap."
            },
            "spacingHorizontal": {
              "type": "number"
            },
            "spacingVertical": {
              "type": "number"
            },
            "zoom": {
              "type": "boolean",
              "description": "Whether to allow zooming the markmap."
            }
          },
          "default": {},
          "markdownDescription": "Global options for all mindmaps. Correspond to the [`IMarkmapJSONOptions`](https://markmap.js.org/api/interfaces/markmap-view.IMarkmapJSONOptions.html) in the markmap project. For more details, please refer to [`jsonOptions`](https://markmap.js.org/docs/json-options#option-list)."
        }
      }
    },
    "markdown.markdownItPlugins": true,
    "markdown.previewScripts": [
      "./dist/markmap-init.global.js"
    ],
    "markdown.previewStyles": [
      "./dist/style.css"
    ],
    "languages": [
      {
        "id": "markmap",
        "extensions": [
          ".mm.md"
        ],
        "configuration": "./dist/syntaxes/language-configuration.json"
      },
      {
        "id": "markmap-markdown-codeblock"
      }
    ],
    "grammars": [
      {
        "language": "markmap",
        "path": "./dist/syntaxes/markmap.tmLanguage.json",
        "scopeName": "source.markmap",
        "embeddedLanguages": {
          "meta.embedded.block.frontmatter": "source.yaml"
        }
      },
      {
        "language": "markmap-markdown-codeblock",
        "scopeName": "markdown.markmap.codeblock",
        "path": "./dist/syntaxes/codeblock.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.markmap": "markmap"
        },
        "injectTo": [
          "text.html.markdown"
        ]
      },
      {
        "scopeName": "markdown.markmap.tag",
        "path": "./dist/syntaxes/tag.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.markmap": "markmap"
        },
        "injectTo": [
          "text.html.markdown"
        ]
      }
    ]
  },
  "scripts": {
    "build": "tsup --env.NODE_ENV production --treeshake",
    "dev": "tsup --watch ./src --env.NODE_ENV development --sourcemap",
    "typecheck": "tsc --noEmit",
    "release": "bumpp",
    "vscode:prepublish": "pnpm run build",
    "publish": "vsce publish --no-dependencies",
    "pack": "vsce package --no-dependencies"
  },
  "devDependencies": {
    "@types/markdown-it": "^14.1.2",
    "@types/node": "~18.19.83",
    "@types/vscode": "^1.89.0",
    "bumpp": "^10.1.0",
    "cpy": "^11.1.0",
    "markmap-lib": "^0.18.11",
    "markmap-toolbar": "^0.18.10",
    "markmap-view": "^0.18.10",
    "radashi": "^12.4.0",
    "tsup": "^8.0.2",
    "typescript": "^5.4.5",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "esbuild"
    ]
  }
}
